/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.marcelmika.lims.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the Buddy service. Represents a row in the &quot;LiferayLIMS_Buddy&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.marcelmika.lims.model.impl.BuddyModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.marcelmika.lims.model.impl.BuddyImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Buddy
 * @see com.marcelmika.lims.model.impl.BuddyImpl
 * @see com.marcelmika.lims.model.impl.BuddyModelImpl
 * @generated
 */
public interface BuddyModel extends BaseModel<Buddy> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a buddy model instance should use the {@link Buddy} interface instead.
	 */

	/**
	 * Returns the primary key of this buddy.
	 *
	 * @return the primary key of this buddy
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this buddy.
	 *
	 * @param primaryKey the primary key of this buddy
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the bid of this buddy.
	 *
	 * @return the bid of this buddy
	 */
	public long getBid();

	/**
	 * Sets the bid of this buddy.
	 *
	 * @param bid the bid of this buddy
	 */
	public void setBid(long bid);

	/**
	 * Returns the user ID of this buddy.
	 *
	 * @return the user ID of this buddy
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this buddy.
	 *
	 * @param userId the user ID of this buddy
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this buddy.
	 *
	 * @return the user uuid of this buddy
	 * @throws SystemException if a system exception occurred
	 */
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this buddy.
	 *
	 * @param userUuid the user uuid of this buddy
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the company ID of this buddy.
	 *
	 * @return the company ID of this buddy
	 */
	public long getCompanyId();

	/**
	 * Sets the company ID of this buddy.
	 *
	 * @param companyId the company ID of this buddy
	 */
	public void setCompanyId(long companyId);

	/**
	 * Returns the portrait ID of this buddy.
	 *
	 * @return the portrait ID of this buddy
	 */
	public long getPortraitId();

	/**
	 * Sets the portrait ID of this buddy.
	 *
	 * @param portraitId the portrait ID of this buddy
	 */
	public void setPortraitId(long portraitId);

	/**
	 * Returns the full name of this buddy.
	 *
	 * @return the full name of this buddy
	 */
	@AutoEscape
	public String getFullName();

	/**
	 * Sets the full name of this buddy.
	 *
	 * @param fullName the full name of this buddy
	 */
	public void setFullName(String fullName);

	/**
	 * Returns the screen name of this buddy.
	 *
	 * @return the screen name of this buddy
	 */
	@AutoEscape
	public String getScreenName();

	/**
	 * Sets the screen name of this buddy.
	 *
	 * @param screenName the screen name of this buddy
	 */
	public void setScreenName(String screenName);

	/**
	 * Returns the status message of this buddy.
	 *
	 * @return the status message of this buddy
	 */
	@AutoEscape
	public String getStatusMessage();

	/**
	 * Sets the status message of this buddy.
	 *
	 * @param statusMessage the status message of this buddy
	 */
	public void setStatusMessage(String statusMessage);

	/**
	 * Returns the is typing of this buddy.
	 *
	 * @return the is typing of this buddy
	 */
	public boolean getIsTyping();

	/**
	 * Returns <code>true</code> if this buddy is is typing.
	 *
	 * @return <code>true</code> if this buddy is is typing; <code>false</code> otherwise
	 */
	public boolean isIsTyping();

	/**
	 * Sets whether this buddy is is typing.
	 *
	 * @param isTyping the is typing of this buddy
	 */
	public void setIsTyping(boolean isTyping);

	/**
	 * Returns the awake of this buddy.
	 *
	 * @return the awake of this buddy
	 */
	public boolean getAwake();

	/**
	 * Returns <code>true</code> if this buddy is awake.
	 *
	 * @return <code>true</code> if this buddy is awake; <code>false</code> otherwise
	 */
	public boolean isAwake();

	/**
	 * Sets whether this buddy is awake.
	 *
	 * @param awake the awake of this buddy
	 */
	public void setAwake(boolean awake);

	/**
	 * Returns the status of this buddy.
	 *
	 * @return the status of this buddy
	 */
	@AutoEscape
	public String getStatus();

	/**
	 * Sets the status of this buddy.
	 *
	 * @param status the status of this buddy
	 */
	public void setStatus(String status);

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public Serializable getPrimaryKeyObj();

	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(Buddy buddy);

	public int hashCode();

	public CacheModel<Buddy> toCacheModel();

	public Buddy toEscapedModel();

	public Buddy toUnescapedModel();

	public String toString();

	public String toXmlString();
}